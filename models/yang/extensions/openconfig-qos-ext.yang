module openconfig-qos-ext {

    yang-version "1";

    // namespace
    namespace "http://openconfig.net/yang/qos/extension";

    prefix "oc-qos-ext";

    import openconfig-qos { prefix oc-qos; }
    import openconfig-yang-types { prefix oc-yang; }
    import openconfig-extensions { prefix oc-ext; }

    organization "Dell";

    contact
      "Dell";

    description
      "This module defines YANG model for network quality-of-service extension.";

    oc-ext:openconfig-version "0.1.0";

    revision "2020-04-01" {
      description
        "Initial version";
      reference "0.1.0";
    }

    grouping qos-queue-state-ext {
	    description "Queue state and counters";
        leaf traffic-type {
            type string;
            description
               "Type of traffic (Unicast/Multicast/Anycast) to be queued";
        }
            
        leaf dropped-octets {
            type oc-yang:counter64;
            description
                "Number of octets dropped by the queue due to overrun";
        }
    
        leaf watermark {
            type oc-yang:counter64;
            description
                "occupancy watermark in bytes since last watermark clearance";
        }

        leaf persistent-watermark {
            type oc-yang:counter64;
            description
                "occupancy watermark in bytes since system up";
        }

    }

    augment /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:output/oc-qos:queues/oc-qos:queue/oc-qos:state {
        description
            "Queue extesnions for state and counters";
        uses qos-queue-state-ext;
    }


    augment /oc-qos:qos/oc-qos:queues/oc-qos:queue/oc-qos:wred/oc-qos:config {
        description
            "Queue config extensions";
        leaf wred-profile {
            type string;
            description
                "Name of the WRED profile";
        }
    }

    augment /oc-qos:qos/oc-qos:queues/oc-qos:queue/oc-qos:wred/oc-qos:state {
        description
            "Queue config association";
        leaf wred-profile {
            type string;
            description
                "Name of the WRED profile";
        }

        leaf scheduler-policy {
            type string;
            description
                "Name of the Scheduer policy";
        }
    }

    grouping qos-interface-priority-group-config {
        description
            "Configuration data for the priority group associated with the 
            interface";
    
        leaf name {
            type string;
            description 
                "Name of the priority group";
        }
    }

    grouping qos-interface-priority-group-state {
        description
            "Operational state data for the priority group associated with the
            interface";

        leaf headroom-watermark {
            type oc-yang:counter64;
            description
                "occupancy watermark in the headroom in bytes since last watermark clearance";
        }

        leaf headroom-persistent-watermark {
            type oc-yang:counter64;
            description
                "occupancy watermark in bytes since system up";
        }

        leaf shared-watermark {
            type oc-yang:counter64;
            description
                "occupancy watermark in shared buffer in bytes since last watermark clearance";
        }

        leaf shared-persistent-watermark {
            type oc-yang:counter64;
            description
                "occupancy watermark in shared buffer in bytes since system up";
        }
    }
    
    grouping qos-interface-priority-group-top {
        description
        "Top-level grouping for the priority group associated with the
        interface";

        container priority-groups {
            description
            "Surrounding container for a list of priority groups that are
            instantiated on an interface.";

            list priority-group {
                key "name";

                description
                  "Top-level container for the priority group associated with this
                  interface";

                leaf name {
                  type leafref {
                    path "../config/name";
                  }
                  description
                    "Reference to the name of the priority group
                    instantiated on the interface.";
                }

                container config {
                  description
                    "Configuration data for the priority group associated with the
                    interface";

                  uses qos-interface-priority-group-config;
                }

                container state {
                  config false;
                  description
                    "Operational state data for the priority group associated with the
                    interface";

                  uses qos-interface-priority-group-config;
                  uses qos-interface-priority-group-state;
                }
            }
        }
    }
        
    augment /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:input {
        description 
            "Priority groups at interface input";
        uses qos-interface-priority-group-top;
    }
    
    grouping qos-threshold-breach-top {
        description 
            "Top-level grouping for QoS threshold breach information";

        container threshold-breaches {
            description
                "Enclosing container for the list of threshold breaches";

            list breach {
                key "id";

                description
                    "List of threshold breaches";

                leaf id {
                    type string;
                    description
                        "Index uniquely identifying a breach entry";
                }

                leaf buffer {
                    type string;
                    description
                        "Queue buffer breach or Priority Group buffer breach";
                }

                leaf type {
                    type string;
                    description
                        "For Queue breach, the type of queue: unicast or multicast;
                         for Priority Group breach, the shared buffer or headroom buffer";
                } 

                leaf port {
                    type string;
                    description
                        "The name of the port whose buffer is breached";
                }

                leaf index {
                    type uint32;
                    description
                        "Queue index or Priority Group index within a port";
                }

                leaf breach-value {
                    type uint32;
                    description
                        "Counter value in term of percentage at breach";
                }

                leaf counter {
                    type oc-yang:counter64;
                    description
                        "Counter value at breach";
                }

                leaf time-stamp {
                    type string;
                    description
                        "Time-stamp (%y-%m-%d - %H:%M:%S) when the threshold breach occurred";
                }
            }
        }
    }

    augment /oc-qos:qos {
        description 
            "Qos extensions containers";
        uses qos-threshold-breach-top;
        uses qos-wred-profile-top;
    }


    augment /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:config {
        description 
            "Scheduler policy configs";
        leaf weight {
            type uint8 {
                range "1..100";
            }
            description 
                "DWRR weight";
        }
    }

    augment /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:state {
        description 
            "Scheduler policy configs state";
        leaf weight {
            type uint8 {
                range "1..100";
            }
            description 
                "DWRR weight";
        }
    }

    deviation /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:output/oc-qos:classifiers {
        deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:input/oc-qos:classifiers {
        deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:config/oc-qos:type{
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:state/oc-qos:type{
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:one-rate-two-color {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:config/oc-qos:cir-pct {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:config/oc-qos:cir-pct-remaining {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:config/oc-qos:pir-pct {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:config/oc-qos:pir-pct-remaining {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:state/oc-qos:cir-pct {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:state/oc-qos:cir-pct-remaining {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:state/oc-qos:pir-pct {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:state/oc-qos:pir-pct-remaining {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:conform-action {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:exceed-action {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:violate-action {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:inputs {
      deviate not-supported;
    }

    deviation /oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:output {
      deviate not-supported;
    }


    grouping qos-wred-profile-config {
        description
          "Configuration parameters relating to a WRED profile";

        leaf name {
            type string;
            description
                "Name of the WRED profile.";
        }

        leaf green-min-threshold {
            type uint64;
            description
                "Mininum threshold set for green packets.";
        }

        leaf yellow-min-threshold {
            type uint64;
            description
                "Mininum threshold set for yellow packets.";
        }

        leaf red-min-threshold {
            type uint64;
            description
                "Mininum threshold set for red packets.";
        }

        leaf green-max-threshold {
            type uint64;
            description
                "Maximum threshold set for green packets.";
        }

        leaf yellow-max-threshold {
            type uint64;
            description
                "Maximum threshold set for yellow packets.";
        }

        leaf red-max-threshold {
            type uint64;
            description
                "Maximum threshold set for red packets.";
        }

        leaf ecn {

            type enumeration {

                enum ECN_NONE {
                    description
                        "No ECN for all packets.";
                }

                enum ECN_GREEN {
                    description
                        "ECN for green colored packets.";
                }

                enum ECN_YELLOW {
                    description
                        "ECN for yellow colored packets.";
                }

                enum ECN_RED {
                    description
                        "ECN for red colored packets.";
                }

                enum ECN_GREEN_YELLOW {
                    description
                        "ECN for green and yellow colored packets.";
                }

                enum ECN_GREEN_RED {
                    description
                        "ECN for green and red colored packets.";
                }

                enum ECN_YELLOW_RED  {
                    description
                        "ECN for yellow and red colored packets.";
                }

                enum ECN_ALL {
                    description
                        "ECN for all packets.";
                }
            }
            description
                "ECN setting for colored packets";
        }

        leaf wred-green-enable {
            type boolean;
            description
                "WRED enabled/disabled for green packets";
        }

        leaf wred-yellow-enable {
            type boolean;
            description
                "WRED enabled/disabled for yellow packets";
        }

        leaf wred-red-enable {
            type boolean;
            description
                "WRED enabled/disabled for red packets";
        }

        leaf green-drop-probability {
            type uint64;
            description
                "Drop probability for green packets";
        }

        leaf yellow-drop-probability {
            type uint64;
            description
                "Drop probability for yellow packets";
        }

        leaf red-drop-probability {
            type uint64;
            description
                "Drop probability for red packets";
        }
    }

    grouping qos-wred-profile-state {
        description
          "Operationalparameters relating to a WRED profile";
    }

    grouping qos-wred-profile-top {
        description
          "Top-level grouping for QoS WRED profile";

        container wred-profiles {
            description
                "Containers for WRED profiles";

            list wred-profile {
                key "name";
               
                description
                    "List of WRED profiles";
                leaf name {
                  type leafref {
                    path "../config/name";
                  }
                  description
                    "Reference to the name of the WRED profile";
                }
                
                container config {
                  description
                    "Configuration parameters relating to a WRED profile.";
                  uses qos-wred-profile-config;
                }

                container state {
                  config false;
                  description
                    "Operational state parameters relating to a WRED profile.";
                  uses qos-wred-profile-config;
                  uses qos-wred-profile-state;
                }

            }
        }
    }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/yellow-min-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/yellow-max-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/yellow-drop-probability {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/wred-yellow-enable {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/red-min-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/red-max-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/red-drop-probability {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/config/wred-red-enable {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/yellow-min-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/yellow-max-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/yellow-drop-probability {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/wred-yellow-enable {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/red-min-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/red-max-threshold {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/red-drop-probability {
      deviate not-supported;
  }

  deviation /oc-qos:qos/wred-profiles/wred-profile/state/wred-red-enable {
      deviate not-supported;
  }

  deviation /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:input/oc-qos:queues {
    deviate not-supported;
  }

  deviation /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:input/oc-qos:scheduler-policy {
    deviate not-supported;
  }

  deviation /oc-qos:qos/oc-qos:interfaces/oc-qos:interface/oc-qos:input/oc-qos:virtual-output-queues {
    deviate not-supported;
  }

  deviation /oc-qos:qos/oc-qos:classifiers {
    deviate not-supported;
  }

}
